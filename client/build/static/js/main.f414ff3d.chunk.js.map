{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","hoc/Layout/Layout.js","pages/Auth/Auth.js","pages/Bulletin/Bulletin.js","pages/Detail/Detail.js","pages/Home/Home.js","pages/User/User.js","pages/404/404.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","style","backgroundColor","height","Footer","position","left","bottom","width","Layout","Fragment","components_Header_Header","Container","children","components_Footer_Footer","Auth","Box","Bulletin","Detail","Home","User","NotFound","App","routes","react_router","path","exact","component","to","hoc_Layout_Layout","react_router_dom","react","fallback","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qNAMeA,EAJA,SAACC,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,gBAAiB,OAAQC,OAAQ,UAA/C,WCgBOC,EAjBA,SAACP,GACf,OACCC,EAAAC,EAAAC,cAAA,OACCC,MAAO,CACNC,gBAAiB,YACjBC,OAAQ,QACRE,SAAU,QACVC,KAAM,IACNC,OAAQ,IACRC,MAAO,SAPT,mBCWaC,EAVA,SAACZ,GACf,OACCC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAW,SAAA,KACCZ,EAAAC,EAAAC,cAACW,EAAD,MACCb,EAAAC,EAAAC,cAACY,EAAA,EAAD,KAAYf,EAAMgB,UACnBf,EAAAC,EAAAC,cAACc,EAAD,gBCDYC,EANF,SAAClB,GACb,OACCC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,mBCIaC,EANE,SAACpB,GACjB,OACCC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,uBCEaE,EAJA,SAACrB,GACf,OAAOC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,qBCKOG,EANF,SAACtB,GACb,OACCC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,mBCIaI,EANF,SAACvB,GACb,OACCC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,mBCIaK,EANE,SAACxB,GACjB,OACCC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,uBC0BaM,EArBH,SAACzB,GACZ,IAAM0B,EACLzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACC1B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWR,IACjCrB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOC,KAAK,QAAQE,UAAWZ,IAC/BjB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOC,KAAK,YAAYE,UAAWV,IACnCnB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOC,KAAK,UAAUE,UAAWT,IACjCpB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOC,KAAK,QAAQE,UAAWP,IAC/BtB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAOC,KAAK,OAAOE,UAAWN,IAC9BvB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAUI,GAAG,UAIf,OACC9B,EAAAC,EAAAC,cAAC6B,EAAD,KACC/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACChC,EAAAC,EAAAC,cAAC+B,EAAA,SAAD,CAAUC,SAAUlC,EAAAC,EAAAC,cAAA,0BAAwBuB,MChB5BU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f414ff3d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => {\n\treturn <div style={{ backgroundColor: 'pink', height: \"100px\" }}>Header</div>;\n};\n\nexport default Header;","import React from 'react';\n\nconst Footer = (props) => {\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: 'lightblue',\n\t\t\t\theight: '100px',\n\t\t\t\tposition: 'fixed',\n\t\t\t\tleft: '0',\n\t\t\t\tbottom: '0',\n\t\t\t\twidth: '100%',\n\t\t\t}}\n\t\t>\n\t\t\tFooter\n\t\t</div>\n\t);\n};\n\nexport default Footer;","import React from 'react';\nimport Header from '../../components/Header/Header';\nimport Footer from '../../components/Footer/Footer';\nimport { Container } from '@material-ui/core';\n\nconst Layout = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t\t<Container>{props.children}</Container>\n\t\t\t<Footer />\n\t\t</>\n\t);\n};\n\nexport default Layout;","import React from 'react';\nimport { Box } from '@material-ui/core';\n\nconst Auth = (props) => {\n\treturn (\n\t\t<Box>Auth Main</Box>\n\t)\n};\n\nexport default Auth","import React from 'react';\nimport { Box } from '@material-ui/core';\n\nconst Bulletin = (props) => {\n\treturn (\n\t\t<Box>Bulletin Main</Box>\n\t)\n};\n\nexport default Bulletin","import React from 'react';\nimport { Box } from '@material-ui/core';\n\nconst Detail = (props) => {\n\treturn <Box>Detail Main</Box>;\n};\n\nexport default Detail;","import React from 'react';\nimport { Box } from '@material-ui/core';\n\nconst Home = (props) => {\n\treturn (\n\t\t<Box>Home Main</Box>\n\t)\n};\n\nexport default Home;","import React from 'react';\nimport { Box } from '@material-ui/core';\n\nconst User = (props) => {\n\treturn (\n\t\t<Box>User Main</Box>\n\t)\n};\n\nexport default User","import React from 'react';\nimport { Box } from '@material-ui/core';\n\nconst NotFound = (props) => {\n\treturn (\n\t\t<Box>NotFound Main</Box>\n\t)\n};\n\nexport default NotFound;","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport Auth from './pages/Auth/Auth';\nimport Bulletin from './pages/Bulletin/Bulletin';\nimport Detail from './pages/Detail/Detail';\nimport Home from './pages/Home/Home';\nimport User from './pages/User/User';\nimport NotFound from './pages/404/404';\n\nconst App = (props) => {\n\tconst routes = (\n\t\t<Switch>\n\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t<Route path=\"/auth\" component={Auth} />\n\t\t\t<Route path=\"/bulletin\" component={Bulletin} />\n\t\t\t<Route path=\"/detail\" component={Detail} />\n\t\t\t<Route path=\"/user\" component={User} />\n\t\t\t<Route path=\"/404\" component={NotFound} />\n\t\t\t<Redirect to='/404' />\n\t\t</Switch>\n\t);\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Router>\n\t\t\t\t<Suspense fallback={<div>Loading...</div>}>{routes}</Suspense>\n\t\t\t</Router>\n\t\t</Layout>\n\t);\n};\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}